function [jobSequence, maxProfit] = jobSequencing(jobs, deadlines, profits)
    n = length(jobs);
    jobData = [profits', deadlines', jobs'];
    [sortedProfits, order] = gsort(jobData(:, 1), "g");
    jobData = jobData(order, :);
    maxDeadline = max(deadlines);
    jobSequence = zeros(1, maxDeadline);
    isSlotOccupied = zeros(1, maxDeadline);
    maxProfit = 0;

    for i = 1:n
        currentJob = jobData(i, 3);
        currentDeadline = jobData(i, 2);
        currentProfit = jobData(i, 1);

        for j = min(currentDeadline, maxDeadline):-1:1
            if isSlotOccupied(j) == 0 then
                jobSequence(j) = currentJob;
                isSlotOccupied(j) = 1;
                maxProfit = maxProfit + currentProfit;
                break;
            end
        end
    end
endfunction

jobs = [1, 2, 3, 4, 5];
deadlines = [2, 1, 2, 1, 3];
profits = [100, 19, 27, 25, 15];

[jobSequence, maxProfit] = jobSequencing(jobs, deadlines, profits);

printf("Selected Job Sequence: ");
for i = 1:length(jobSequence)
    if jobSequence(i) <> 0 then
        printf("Job %d ", jobSequence(i));
    end
end
printf("\nMaximum Profit: %d\n", maxProfit);
